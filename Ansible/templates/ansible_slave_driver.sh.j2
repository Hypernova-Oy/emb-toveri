#!/bin/bash
## {{ansible_managed}}
##
## IN THIS FILE
##
## Sets up the ansible-user with administrator access from the central controller.
##
## You need to run this script only once when adding a new LXC-host to the centrally controlled network.
##

SYSTEMD_SRV_AUTOSSH_FILE="/etc/systemd/system/toveri-cc-ssh-tunnel.service"

TOVERI_CC_HOSTNAME="toveri-cc"
TOVERI_CC_IP="{{ansible_host}}"
TOVERI_CC_HOST_KEY_PUB="ecdsa-sha2-nistp256 {{ansible_ssh_host_key_ecdsa_public}}"
TOVERI_CC_SSH_REVERSE_SHELL_REMOTE_PORT="{{toveri_cc_ssh_remote_port}}"
TOVERI_CC_ZABBIX_REVERSE_PORT="{{toveri_cc_monitoring_remote_port}}"

TOVERI_HOSTNAME="{{toveri_inventory_hostname}}"
TOVERI_ID_RSA="{{lookup('file', secret+'/id_rsa.'+toveri_inventory_hostname)}}"
TOVERI_ID_RSA_PUB="{{lookup('file', secret+'/id_rsa.'+toveri_inventory_hostname+'.pub')}}"

ANSIBLE_SUDO_PASS="{{ansible_sudo_pass}}"
ANSIBLE_PUBLIC_KEY="{{ansible_public_key}}"

echo "+----------------------------------------+"
echo "| Configuring Ansible-access             |"
echo "|  for the Koha-Suomi central controller |"
echo "+----------------------------------------+"
echo ""
echo "Checking if you are running as root"
test $(whoami) != "root" && echo "Not running as root, aborting" && exit 1
echo ""
echo "Checking network connectivity to packages"
sudo apt update
test $? != 0 && echo -e "\n--------------------------------------\nNo network connection! Cannot proceed.\n--------------------------------------\n" && exit 2
echo ""
echo "Installing OpenSSH-Server"
sudo apt -y install openssh-server autossh
#Raspberry Pi might have openssh-server installed but masked
sudo systemctl enable ssh
sudo systemctl start ssh
echo ""
echo "+------------------+"
echo "| Setting hostname |"
echo "+------------------+"
echo ""
echo "$TOVERI_HOSTNAME" > /etc/hostname
echo "127.0.0.1 $TOVERI_HOSTNAME" >> /etc/hosts
echo "$TOVERI_CC_IP toveri-cc" >> /etc/hosts
echo ""
echo "+---------------------------------------------------------------+"
echo "| Intalling some dependencies ansible needs to run it's modules |"
echo "+---------------------------------------------------------------+"
echo ""
sudo apt -y install python
echo ""
echo "+-----------------------------------+"
echo "| Creating ansible-user             |"
echo "+-----------------------------------+"
echo ""
useradd -m ansible
addgroup ansible sudo
echo ""
echo "ansible:$ANSIBLE_SUDO_PASS" | chpasswd
echo "Password set. Thank you!"
echo ""
echo "+---------------------------------------------------+"
echo "| Authorizing remote access from central controller |"
echo "+---------------------------------------------------+"
echo ""
mkdir /home/ansible/.ssh
chmod 700 /home/ansible/.ssh
echo "$ANSIBLE_PUBLIC_KEY" >> /home/ansible/.ssh/authorized_keys
chown -R ansible:ansible /home/ansible/.ssh
chmod 600 /home/ansible/.ssh/authorized_keys
cp -r /home/ansible/.ssh /root/
chown -R root:root /root/.ssh
echo ""
echo "+-----------------------------------+"
echo "| Creating toveri-user and ssh-key  |"
echo "+-----------------------------------+"
useradd -m toveri
su -c "echo 'y' | /usr/bin/ssh-keygen -f /home/toveri/.ssh/id_rsa -t rsa -N ''" toveri #This simply generates correct file structures.
echo "$TOVERI_ID_RSA" > /home/toveri/.ssh/id_rsa
chmod 600 /home/toveri/.ssh/id_rsa
echo "$TOVERI_ID_RSA_PUB" > /home/toveri/.ssh/id_rsa.pub
chmod 644 /home/toveri/.ssh/id_rsa.pub
echo "$TOVERI_CC_HOSTNAME $TOVERI_CC_HOST_KEY_PUB" >> /home/toveri/.ssh/known_hosts
chmod 644 /home/toveri/.ssh/known_hosts
chown -R toveri:toveri /home/toveri/.ssh
echo ""
echo "+-----------------------------+"
echo "| Deploy toveri-cc-ssh-tunnel |"
echo "+-----------------------------+"
echo ""
echo "
[Unit]
Description=Toveri dynamic AutoSSH reverse ssh tunnel service
After=network.target

[Service]
Type=simple
User=toveri
Environment='AUTOSSH_GATETIME=0'
ExecStart=/usr/bin/autossh -M 0 -o 'ServerAliveInterval 120' -o 'ServerAliveCountMax 2' -o 'ExitOnForwardFailure yes' -NT -R $TOVERI_CC_SSH_REVERSE_SHELL_REMOTE_PORT:localhost:22 -R $TOVERI_CC_IP:$TOVERI_CC_ZABBIX_REVERSE_PORT:localhost:10050 toveri@toveri-cc
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target

" > $SYSTEMD_SRV_AUTOSSH_FILE
systemctl enable toveri-cc-ssh-tunnel
systemctl start toveri-cc-ssh-tunnel
echo ""
echo "Thank you!"
echo ""
echo ""
echo "+------------------------------------------------------------------+"
echo "| Printing the system host key, you must put it in Ansible!        |"
echo "| Place the following key to                                       |"
echo "|   KKKKonfig/host_vars/HOSTNAME/host.yml |"
echo "| to key 'host_key_pub', for example:                              |"
echo "|   host_key_pub: 'ecdsa-sha2-nistp256 AAA...pOo= root@hetula-kkk' |"
echo "+------------------------------------------------------------------+"
echo ""
hostkey=`cat /etc/ssh/ssh_host_ecdsa_key.pub`
echo "host_key_pub: '$hostkey'"
echo ""
echo ""
echo "+------------------------------------------------+"
echo "| Printing the toveri-user id_rsa.pub            |"
echo "| You must authorise it for the cc's toveri-user |"
echo "+------------------------------------------------+"
echo ""
cat /home/toveri/.ssh/id_rsa.pub
echo ""
echo ""
echo "<3 All is said and done. Now you can start running ansible-playbooks on this LXC host! <3"

rm "$0" #Suicide to cleanup passwords from this file
